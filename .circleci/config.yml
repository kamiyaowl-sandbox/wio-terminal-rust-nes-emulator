version: 2
jobs:
  build:
    docker:
      - image: circleci/rust
    steps:
      # build dependencies
      - run:
          name: Install apt dependencies
          command: sudo apt install -y libgtk-3-dev nodejs npm gcc g++ gcc-arm-none-eabi
      - run:
          name: Install nodejs
          command: sudo npm install -g n && sudo n latest
      - run:
          name: Install netlify-cli
          command: sudo npm install -g netlify-cli --unsafe-perm=true --allow-root
      # code checkout
      - checkout
      - run: 
          name: Pull Submodule
          command: git submodule init && git submodule update --remote
      # install rustup and tools
      - run:
          name: rustup version
          command: rustup --version
      - run:
          name: rustup component add
          command: rustup component add clippy rustfmt
      - run:
          name: rustup install nightly
          command: rustup install nightly
      - run:
          name: rustup target add
          command: rustup target add thumbv6m-none-eabi thumbv7m-none-eabi thumbv7em-none-eabi thumbv7em-none-eabihf
      - run:
          name: rustup target add nightly
          command: rustup run nightly rustup target add thumbv6m-none-eabi thumbv7m-none-eabi thumbv7em-none-eabi thumbv7em-none-eabihf
      - run:
          name: cargo install
          command: cargo install wasm-pack
      # deploy to netlify (require $NETLIFY_AUTH_TOKEN, $NETLIFY_SITE_ID)
      # netlifyがpush時の強制デプロイのやめ方がわからないので毎回やっておく
      - run:
          name: build wasm release
          command: cd wasm && wasm-pack build --release
          when: always
      - run:
          name: npm install && build
          command: cd wasm && npm install && npm run build
          when: always
      - run:
          name: Deploy to netlify
          command: netlify deploy --prod -d ./wasm/dist
          when: always
      # build lib
      - run:
          name: build
          command: cargo build
          when: always
      - run:
          name: build release
          command: cargo build --release
          when: always
      # run test
      - run:
          name: test
          command: cd test && cargo test
          when: always
      - run:
          name: test release
          command: cd test && cargo test --release
          when: always
      # run bench
      - run:
          name: bench
          command: cd test && rustup run nightly cargo bench  --features "bench"
          when: always
      # build desktop
      - run:
          name: build desktop
          command: cd desktop && cargo build
          when: always
      - run:
          name: build desktop release
          command: cd desktop && cargo build --release
          when: always
      # build embedded
      - run:
          name: build embedded release
          command: cd embedded && rustup run nightly cargo build --release && make
          when: always
      - store_artifacts:
          path: embedded/target/BUILD/rust-nes-emulator-for-DISCO-F769NI.bin
          destination: binary-for-mbed.bin

